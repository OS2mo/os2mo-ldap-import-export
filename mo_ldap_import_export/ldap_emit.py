# SPDX-FileCopyrightText: Magenta ApS <https://magenta.dk>
# SPDX-License-Identifier: MPL-2.0
import asyncio

import structlog
from fastramqpi.ramqp.amqp import AMQPSystem

from .autogenerated_graphql_client import EventSendInput
from .autogenerated_graphql_client.client import GraphQLClient
from .types import LDAPUUID

logger = structlog.stdlib.get_logger()


async def publish_uuids(
    graphql_client: GraphQLClient,
    ldap_amqpsystem: AMQPSystem,
    uuids: list[LDAPUUID],
) -> None:
    if not uuids:
        return None
    logger.info("Registered change for LDAP object(s)", uuids=uuids)
    async with asyncio.TaskGroup() as tg:
        for uuid in uuids:
            tg.create_task(ldap_amqpsystem.publish_message("uuid", uuid))
            tg.create_task(
                graphql_client.send_event(
                    input=EventSendInput(
                        namespace="ldap",
                        routing_key="uuid",
                        # TODO: proper event models a la sdtoolplus?
                        subject=str(uuid),
                    )
                )
            )
