# SPDX-FileCopyrightText: Magenta ApS <https://magenta.dk>
# SPDX-License-Identifier: MPL-2.0
import asyncio
from uuid import UUID
from uuid import uuid4

from pydantic import BaseModel
from pydantic import Extra
from pydantic import Field
from ramodels.mo import MOBase as RAMOBase
from ramodels.mo import Validity as RAValidity
from ramodels.mo.details.address import Address as RAAddress
from ramodels.mo.details.engagement import Engagement as RAEngagement
from ramodels.mo.details.it_system import ITUser as RAITUser
from ramodels.mo.employee import Employee as RAEmployee
from ramodels.mo.organisation_unit import OrganisationUnit as RAOrganisationUnit

from mo_ldap_import_export.autogenerated_graphql_client import GraphQLClient


class StrictBaseModel(BaseModel):
    """Pydantic BaseModel with strict(er) defaults."""

    class Config:
        extra = Extra.forbid
        frozen = True
        # TODO: do we want this? grandfathered-in from ramodels
        allow_population_by_field_name = True


class Validity(RAValidity):
    pass


class Address(RAAddress, RAMOBase):
    pass


class Employee(RAEmployee, RAMOBase):
    pass


class Engagement(RAEngagement, RAMOBase):
    pass


class ITUser(RAITUser, RAMOBase):
    pass


class OrganisationUnit(RAOrganisationUnit, RAMOBase):
    pass


class JobTitleFromADToMO(StrictBaseModel):
    uuid: UUID = Field(default_factory=uuid4)
    user_key: str | None  # unused

    user: UUID
    job_function: UUID

    async def sync_to_mo(self, graphql_client: GraphQLClient) -> None:
        result = await graphql_client.read_engagements_by_employee_uuid(self.user)
        engagements = [x.current for x in result.objects if x.current is not None]
        await asyncio.gather(
            *[
                graphql_client.set_job_title(
                    uuid=obj.uuid,
                    from_=obj.validity.from_,
                    to=obj.validity.to,
                    job_function=self.job_function,
                )
                for obj in engagements
            ]
        )

    class Config(StrictBaseModel.Config):
        extra = Extra.allow


MOBase = (
    Address | Employee | Engagement | ITUser | OrganisationUnit | JobTitleFromADToMO
)
