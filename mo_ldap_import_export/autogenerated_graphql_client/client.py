# Generated by ariadne-codegen on 2023-08-14 15:58
# Source: queries.graphql

from typing import List, Optional, Union
from uuid import UUID

from .async_base_client import AsyncBaseClient
from .base_model import UNSET, UnsetType
from .employees import Employees, EmployeesEmployees


def gql(q: str) -> str:
    return q


class GraphQLClient(AsyncBaseClient):
    async def employees(
        self, uuids: Union[Optional[List[UUID]], UnsetType] = UNSET
    ) -> EmployeesEmployees:
        query = gql(
            """
            query Employees($uuids: [UUID!]) {
              employees(uuids: $uuids, to_date: null, from_date: null) {
                objects {
                  objects {
                    uuid
                    cpr_no
                    givenname
                    surname
                    nickname_givenname
                    nickname_surname
                    validity {
                      to
                      from
                    }
                  }
                }
              }
            }
            """
        )
        variables: dict[str, object] = {"uuids": uuids}
        response = await self.execute(query=query, variables=variables)
        data = self.get_data(response)
        return Employees.parse_obj(data).employees
