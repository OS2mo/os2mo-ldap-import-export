# Generated by ariadne-codegen on 2023-08-14 15:04
# Source: queries.graphql

from datetime import datetime
from typing import Any, List, Optional
from uuid import UUID

from pydantic import Field

from .base_model import BaseModel


class SingleEmployeeAllTime(BaseModel):
    employees: "SingleEmployeeAllTimeEmployees"


class SingleEmployeeAllTimeEmployees(BaseModel):
    objects: List["SingleEmployeeAllTimeEmployeesObjects"]


class SingleEmployeeAllTimeEmployeesObjects(BaseModel):
    objects: List["SingleEmployeeAllTimeEmployeesObjectsObjects"]


class SingleEmployeeAllTimeEmployeesObjectsObjects(BaseModel):
    uuid: UUID
    cpr_no: Optional[Any]
    givenname: str
    surname: str
    nickname_givenname: Optional[str]
    nickname_surname: Optional[str]
    validity: "SingleEmployeeAllTimeEmployeesObjectsObjectsValidity"


class SingleEmployeeAllTimeEmployeesObjectsObjectsValidity(BaseModel):
    to: Optional[datetime]
    from_: Optional[datetime] = Field(alias="from")


SingleEmployeeAllTime.update_forward_refs()
SingleEmployeeAllTimeEmployees.update_forward_refs()
SingleEmployeeAllTimeEmployeesObjects.update_forward_refs()
SingleEmployeeAllTimeEmployeesObjectsObjects.update_forward_refs()
SingleEmployeeAllTimeEmployeesObjectsObjectsValidity.update_forward_refs()
