# Generated by ariadne-codegen on 2023-08-14 15:58
# Source: queries.graphql

from datetime import datetime
from typing import Any, List, Optional
from uuid import UUID

from pydantic import Field

from .base_model import BaseModel


class Employees(BaseModel):
    employees: "EmployeesEmployees"


class EmployeesEmployees(BaseModel):
    objects: List["EmployeesEmployeesObjects"]


class EmployeesEmployeesObjects(BaseModel):
    objects: List["EmployeesEmployeesObjectsObjects"]


class EmployeesEmployeesObjectsObjects(BaseModel):
    uuid: UUID
    cpr_no: Optional[Any]
    givenname: str
    surname: str
    nickname_givenname: Optional[str]
    nickname_surname: Optional[str]
    validity: "EmployeesEmployeesObjectsObjectsValidity"


class EmployeesEmployeesObjectsObjectsValidity(BaseModel):
    to: Optional[datetime]
    from_: Optional[datetime] = Field(alias="from")


Employees.update_forward_refs()
EmployeesEmployees.update_forward_refs()
EmployeesEmployeesObjects.update_forward_refs()
EmployeesEmployeesObjectsObjects.update_forward_refs()
EmployeesEmployeesObjectsObjectsValidity.update_forward_refs()
