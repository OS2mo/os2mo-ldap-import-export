# Generated by ariadne-codegen on 2023-08-14 15:36
# Source: queries.graphql

from datetime import datetime
from typing import Any, List, Optional
from uuid import UUID

from pydantic import Field

from .base_model import BaseModel


class AllEmployees(BaseModel):
    employees: "AllEmployeesEmployees"


class AllEmployeesEmployees(BaseModel):
    objects: List["AllEmployeesEmployeesObjects"]


class AllEmployeesEmployeesObjects(BaseModel):
    objects: List["AllEmployeesEmployeesObjectsObjects"]


class AllEmployeesEmployeesObjectsObjects(BaseModel):
    uuid: UUID
    cpr_no: Optional[Any]
    givenname: str
    surname: str
    nickname_givenname: Optional[str]
    nickname_surname: Optional[str]
    validity: "AllEmployeesEmployeesObjectsObjectsValidity"


class AllEmployeesEmployeesObjectsObjectsValidity(BaseModel):
    to: Optional[datetime]
    from_: Optional[datetime] = Field(alias="from")


AllEmployees.update_forward_refs()
AllEmployeesEmployees.update_forward_refs()
AllEmployeesEmployeesObjects.update_forward_refs()
AllEmployeesEmployeesObjectsObjects.update_forward_refs()
AllEmployeesEmployeesObjectsObjectsValidity.update_forward_refs()
