# SPDX-FileCopyrightText: Magenta ApS <https://magenta.dk>
# SPDX-License-Identifier: MPL-2.0

import pytest
from fastramqpi.pytest_util import retrying

from mo_ldap_import_export.autogenerated_graphql_client.client import GraphQLClient
from mo_ldap_import_export.autogenerated_graphql_client.input_types import (
    ListenerCreateInput,
)
from mo_ldap_import_export.types import LDAPUUID
from tests.integration.conftest import AddLdapPerson
from tests.integration.conftest import DNList2UUID


@pytest.mark.integration_test
@pytest.mark.envvar(
    {
        "LISTEN_TO_CHANGES_IN_LDAP": "True",
        "LDAP_OUS_TO_SEARCH_IN": '["ou=os2mo,o=magenta"]',
    }
)
@pytest.mark.usefixtures("test_client")
async def test_generate(
    graphql_client: GraphQLClient,
    add_ldap_person: AddLdapPerson,
    dnlist2uuid: DNList2UUID,
) -> None:
    listener = await graphql_client.declare_event_listener(
        input=ListenerCreateInput(
            namespace="ldap",
            routing_key="uuid",
            user_key="test",
        )
    )
    ldap_person_dn = await add_ldap_person("ava", "0101700000")
    ldap_person_uuid = await dnlist2uuid(ldap_person_dn)
    async for attempt in retrying():
        with attempt:
            events = await graphql_client.list_events(listener.uuid)
            uuids = {LDAPUUID(e.subject) for e in events.objects}
            assert ldap_person_uuid in uuids
