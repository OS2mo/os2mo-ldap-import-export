# SPDX-FileCopyrightText: Magenta ApS <https://magenta.dk>
# SPDX-License-Identifier: MPL-2.0

mutation itsystem_create($input: ITSystemCreateInput!) {
  itsystem_create(input: $input) {
    uuid
  }
}

query read_facet_uuid($user_key: String!) {
  facets(filter: {user_keys: [$user_key]}) {
    objects {
      uuid
    }
  }
}

mutation class_create($input: ClassCreateInput!) {
  class_create(input: $input) {
    uuid
  }
}

query read_class_uuid($user_key: String!) {
  classes(filter: {user_keys: [$user_key]}) {
    objects {
      uuid
    }
  }
}

mutation class_update($input: ClassUpdateInput!) {
  class_update(input: $input) {
    uuid
  }
}

query read_root_org_uuid {
  org {
    uuid
  }
}

mutation address_terminate($input: AddressTerminateInput!) {
  address_terminate(input: $input) {
    uuid
  }
}

mutation engagement_terminate($input: EngagementTerminateInput!) {
  engagement_terminate(input: $input) {
    uuid
  }
}

mutation ituser_terminate($input: ITUserTerminateInput!) {
  ituser_terminate(input: $input) {
    uuid
  }
}

query read_employees_with_engagement_to_org_unit($org_unit_uuid: UUID!) {
  engagements(filter: {org_unit: {uuids: [$org_unit_uuid]}}) {
    objects {
      current {
        employee_uuid
      }
    }
  }
}

query read_engagements_by_employee_uuid($employee_uuid: UUID!) {
  engagements(filter: {employee: {uuids: [$employee_uuid]}}) {
    objects {
      current {
        uuid
        validity {
          from
          to
        }
      }
    }
  }
}

mutation set_job_title($uuid: UUID!,
                     $from: DateTime!,
                     $to: DateTime,
                     $job_function: UUID) {
  engagement_update(
    input: {uuid: $uuid,
            validity: {from: $from, to: $to},
            job_function: $job_function}
  ) {
    uuid
  }
}
